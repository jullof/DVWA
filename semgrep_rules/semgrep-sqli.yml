rules:
  # 1) SQLi (PHP, taint)
  - id: sqli.taint.php.user_to_query
    languages: [php]
    severity: ERROR
    mode: taint
    message: "User-controlled data flows into raw SQL query execution (possible SQL Injection)."
    metadata:
      category: "SQLi"
      source_example: "$result = mysqli_query($db, 'SELECT * FROM users WHERE id=' . $_GET['id']);"
    pattern-sources:
      - pattern: $_GET[$P]
      - pattern: $_POST[$P]
      - pattern: $_REQUEST[$P]
    pattern-sanitizers:
      - pattern: intval($S)
      - pattern: floatval($S)
      - pattern: mysqli_real_escape_string($DB, $S)
      - pattern: $DB->real_escape_string($S)
    pattern-sinks:
      # only change: allow variable arg counts / positions
      - pattern: mysqli_query(..., $Q, ...)
      - pattern: mysql_query($Q, ...)
      - pattern: pg_query(..., $Q, ...)
      - pattern: $DB->query($Q, ...)
      - pattern: $DB->exec($Q, ...)
      - pattern: $PDO->query($Q, ...)
      - pattern: $PDO->exec($Q, ...)

  # 2) Direct concats
  - id: sqli.direct.php.superglobal_in_query
    languages: [php]
    severity: ERROR
    message: "SQL query directly includes user input from superglobals."
    metadata:
      category: "SQLi"
    patterns:
      - pattern-either:
          - pattern: mysqli_query(..., "...". $_GET[$K] . "...", ...)
          - pattern: mysqli_query(..., "...". $_POST[$K] . "...", ...)
          - pattern: mysqli_query(..., "...". $_REQUEST[$K] . "...", ...)
          - pattern: mysql_query("...". $_GET[$K] . "...", ...)
          - pattern: mysql_query("...". $_POST[$K] . "...", ...)
          - pattern: mysql_query("...". $_REQUEST[$K] . "...", ...)
          - pattern: $DB->query("...". $_GET[$K] . "...", ...)
          - pattern: $DB->query("...". $_POST[$K] . "...", ...)
          - pattern: $DB->query("...". $_REQUEST[$K] . "...", ...)
          - pattern: $PDO->query("...". $_GET[$K] . "...", ...)
          - pattern: $PDO->query("...". $_POST[$K] . "...", ...)
          - pattern: $PDO->query("...". $_REQUEST[$K] . "...", ...)

  # 3) Concat variable heuristic — preserve pattern-not, make call 
  - id: sqli.heur.php.concat_variable
    languages: [php]
    severity: WARNING
    message: "SQL query built via string concatenation — check if sanitized."
    metadata:
      category: "SQLi"
    patterns:
      - pattern-inside: |
          $SQL = "..." . $V . "...";
          ...
          $CALL($SQL, ...);
      - pattern-either:
          - pattern: $CALL = mysqli_query
          - pattern: $CALL = mysql_query
          - pattern: $CALL = pg_query
          - pattern: $CALL = $DB->query
          - pattern: $CALL = $DB->exec
          - pattern: $CALL = $PDO->query
          - pattern: $CALL = $PDO->exec
      - pattern-not-either:
          - pattern: $V = intval($S);
          - pattern: $V = floatval($S);
          - pattern: $V = mysqli_real_escape_string($DB, $S);
          - pattern: $V = $DB->real_escape_string($S);
